dnl
dnl $Log: configure.in,v $
dnl Revision 1.10  2000-12-06 18:21:35  alriddoch
dnl 	* Fixes to worlds object list so it now contains world.
dnl
dnl 	* More python code tweaks to work with modifications to interface.
dnl
dnl 	* Modified code which gets Thing attributes from Message::Object
dnl 	  so it can use any object dictionary to look up parent object.
dnl
dnl 	* Fixed handling of Thing's static type attribute.
dnl
dnl 	* Modified creation of operations from python to eliminate
dnl 	  some strange segfaults.
dnl
dnl 	* Re-wrote and fixed Entity creation from python.
dnl
dnl 	* Implemented dictlist.remove_value for removing things from inventory.
dnl
dnl 	* Implemented Vector3D arithmetic and methods from python.
dnl
dnl 	* Implemented as_entity() and get_xyz() methods for Thing from
dnl 	  python.
dnl
dnl 	* Commented out deletion of operations from python OperationObject
dnl 	  dealloc() function as it was causing segfaults. There is a problem
dnl 	  somewhere with ownership not being cleared, but I can't find it.
dnl
dnl 	* Implemented conversion of Python Operation and Oplist objects
dnl 	  to Message::Object.
dnl
dnl 	* Fixed MemMap so that attributes of Things are accuratly updated.
dnl
dnl 	* Fixed it so that look ops from mind are broadcast rather than sent
dnl 	  to world. This may have to be reverted.
dnl
dnl 	* Tweaked autoconf to make it cleaner and work better. Still needs
dnl 	  alot of work.
dnl
dnl A simple test of some goals now works! The lych goals worked to some
dnl extent and no-longer gives python errors. Only a few more things are
dnl required before Acorn can run, at which point I will release 0.1
dnl for testing.
dnl
dnl Al
dnl
dnl Revision 1.9  2000/12/03 14:23:26  alriddoch
dnl 	* Added support for varconf config files.
dnl
dnl 	* Used config file to list enitity types and their python class files.
dnl
dnl 	* Cleaned up reference counting in Python API related C++ code.
dnl 	  References should all now be handled correctly.
dnl
dnl 	* Added support for adding None to Operation and Oplist.
dnl
dnl Reference count changes have solved some segfaults I was getting. New
dnl config files allows easy specification of rulesets, and has allowed
dnl me to test the complete range of python entity classes used in Acorn.
dnl
dnl Import hook code does not appear to work for classes imported directly using
dnl python API calls.
dnl
dnl Al
dnl
dnl Revision 1.8  2000/11/27 19:00:16  alriddoch
dnl Fixed legacy Atlas error in configure.in
dnl
dnl Revision 1.7  2000/11/14 15:52:10  alriddoch
dnl 	* Added more Python/C API code. Basic framework now exists for
dnl 	  creating and manipulating Operations in the python code.
dnl
dnl Al
dnl
dnl Revision 1.6  2000/10/24 12:50:22  alriddoch
dnl 	* Fixed movement code which now works.
dnl
dnl 	* Fixed set operation, and added attributes map to Thing.
dnl
dnl 	* Started adding Python interface code.
dnl
dnl         * Starting changelog from initial attempt to port cyphesis into C++.
dnl
dnl Revision 1.5  2000/08/30 05:25:52  karsten
dnl sorry ... config.cache has played a trick on me ...
dnl this should work now.
dnl
dnl Revision 1.4  2000/08/30 05:13:54  karsten
dnl small changes to configure.in so that "--with-atlas=" option works
dnl
dnl Revision 1.3  2000/08/21 11:31:18  alriddoch
dnl Can now connect, login or create account, and create a character, which is
dnl then added to the world. Socket code has been tweaked so it now handles
dnl client disconnection a little better.
dnl
dnl Al
dnl
dnl Revision 1.2  2000/08/19 16:42:18  alriddoch
dnl Server now allows client to create account, login, and attempt to create a
dnl character. Early stage of operation routing seems to be working.
dnl
dnl Al
dnl
dnl Revision 1.1  2000/08/13 20:36:18  alriddoch
dnl Initial check of work in progress converting cyphesis python code over to
dnl C++. Don't do anything to this code until I have finished moving the rest
dnl of the code into place.
dnl
dnl Al
dnl
dnl

dnl Initialise autoconf

AC_INIT()

dnl Initialise automake

AM_INIT_AUTOMAKE(cyphesis, 0.0.2)
AM_CONFIG_HEADER
AC_ARG_PROGRAM

dnl Need libtool

AM_PROG_LIBTOOL
AC_PROG_LIBTOOL

dnl Test for C++ compiler

AC_PROG_CXX

CXXFLAGS='-Wall -g'

AC_DEFINE_UNQUOTED(INSTALLDIR,"$prefix")
AC_CHECK_FUNC(cos,,[AC_CHECK_LIB(m,cos)])

dnl Test for WorldForge Atlas Libraries

AC_LANG_CPLUSPLUS
AC_REQUIRE_CPP

AC_ARG_ENABLE(debug,[  --enable-debug           creates debugging code [default=no]],
[ 
   if test $enableval = "no"; then 
                ac_use_debug_code="no"  
   else 
                ac_use_debug_code="yes"
   fi
], [ac_use_debug_code="no"])



AC_CACHE_CHECK(for location of Atlas, cyphesis_cv_libatlas,
[
	cyphesis_cv_libatlas=/usr/local
	AC_ARG_WITH(atlas,
	[  --with-atlas=DIR           libAtlas is installed in ],
	[
		if test $withval != yes; then
			cyphesis_cv_libatlas=$withval
		fi
	])
])
dnl for some reason this only works if outside AC_CACHE_CHECK(..)
dnl (probably the check is only run if there is no config.cache file)
CPPFLAGS="$CPPFLAGS -I${cyphesis_cv_libatlas}/include"
LDFLAGS="$LDFLAGS -L${cyphesis_cv_libatlas}/lib"

AC_CACHE_CHECK(for location of python headers, cyphesis_cv_python,
[
	cyphesis_cv_python=/usr/include/python1.5
	AC_ARG_WITH(python,
	[  --with-python=DIR          python includes in ].
	[
		if test $withval != yes; then
			cyphesis_cv_python=$withval
		fi
	])
])
dnl for some reason this only works if outside AC_CACHE_CHECK(..)
dnl (probably the check is only run if there is no config.cache file)
CPPFLAGS="$CPPFLAGS -I${cyphesis_cv_python}"
AC_CACHE_CHECK(for location of python libs, cyphesis_cv_libpython,
[
	cyphesis_cv_libpython=/usr/lib/python1.5/config
	AC_ARG_WITH(python,
	[  --with-pythonlib=DIR          python includes in ].
	[
		if test $withval != yes; then
			cyphesis_cv_libpython=$withval
		fi
	])
])

LDFLAGS="$LDFLAGS -L${cyphesis_cv_libpython}"
 

AC_CACHE_VAL(cyphesis_cv_atlas_headers,
[
	atlash="$atlash Atlas/Bridge.h"
dnl	atlash="$atlash Atlas/Net/Stream.h"
	atlash="$atlash Atlas/Message/Object.h"
dnl	atlash="$atlash Atlas/Objects/Decoder.h"
    AC_CHECK_HEADERS(`echo $atlash`, [],
	[
		AC_MSG_ERROR(Couldn't find working Atlas headers.)
	])
])

AC_CACHE_VAL(cyphesis_cv_atlas_libraries,
[
	AC_CHECK_LIB(Atlas, main,
    [
        LIBS="$LIBS -lAtlas"
        LIBS="$LIBS -lAtlasCodecs"
        LIBS="$LIBS -lAtlasMessage"
        LIBS="$LIBS -lAtlasNet"
    ],
	[
		AC_MSG_ERROR(Couldn't find working Atlas libraries.);
	])
])

AC_CACHE_VAL(cyphesis_cv_python_headers,
[
	AC_CHECK_HEADERS(Python.h, [],
	[
		AC_MSG_ERROR(Couldn't find working Python headers.)
	])
])

AC_CHECK_LIB(dl,dlopen)
AC_CHECK_LIB(pthread,pthread_create)
AC_CHECK_LIB(varconf,main)

AC_CACHE_VAL(cyphesis_cv_python_libraries,
[
	AC_CHECK_LIB(python1.5, Py_Initialize, LIBS="$LIBS -lpython1.5",
	[
		AC_MSG_ERROR(Couln't find working Python libraries.);
	])
])

dnl Generate files
AC_OUTPUT([
	Makefile
	physics/Makefile
	common/Makefile
	modules/Makefile
	rulesets/Makefile
	server/Makefile
	client/Makefile
])
