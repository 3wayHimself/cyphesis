Definitly for Acorn 0.4:

  Add handling of Appearance operations to BaseMind.

  Implement loading the same map as the client.

  Sort out collision detection wrt moving alongside an object in close
  proximity, and add CD for two moving objects. Basically we need sliding.
  along an object.

  Sort out collision prediction between two moving entities. Current problem
  is that it is not possible to tell when movement started, and thus get
  correct starting position for the movement.

  Use drunkness.

  Use combine operation to deal with making more than one object into one.

  Fully implement stackable objects.

  Replace
    o = new Operation(); *o = Operation::Instantiate();
  with
    o = new Opertion(Operation::Instantiate());
  cos it is about twice as quick.

Provisional for Acorn 0.4:

  Implement accelerated Atlas Objects API. MAYBE: POSTPONED FROM 0.3

Required for werewolf:

  Implement calendric time using WorldTime and DateTime classes, so nighttime
  and moons are properlly handled.

  Implement sleeping.

Possible ideas:

  Try out optimisations such as -funroll_loops -fstrict_aliasing -ffast_math
  -mx86. Consider a custom python interpreter build.

  Add fully featured database persistance.

  Persistance system is naive right now. It does not take account of that
  fact that characters need minds, and it stores the world object.

  Get system working as an AI client to another server. This would also
  be a good time to get cyphesis working as a mindless server, without
  any AI code.
